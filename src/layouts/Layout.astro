---
import { ViewTransitions } from "astro:transitions";
import HomeSearch from "../components/HomeSearch.astro";
import Library from "../components/Library.astro";
import { Player } from "../components/Player.tsx";

interface Props {
	title: string;
};

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<ViewTransitions fallback="none" />
		<title>{title}</title>
	</head>
	<body class="h-screen w-screen">
		<nav>
			<HomeSearch />
			<Library />
		</nav>
		<main class="bg-[#121212] rounded-md overflow-y-auto">
			<slot />
		</main>
		<footer class="col-span-2">
			<Player client:load transition:name="media-player" transition:persist/>
		</footer>
	</body>
</html>

<style is:global>

	@font-face {
		font-family: "circular-bold";
		src: url("/fonts/CircularStd-Bold.otf");
	}

	@font-face {
		font-family: "circular-light";
		src: url("/fonts/CircularStd-Light.otf");
	}

	@font-face {
		font-family: "circular-medium";
		src: url("/fonts/CircularStd-Medium.otf");
	}

	body {
		display: grid;
		column-gap: 10px;
		justify-content: center;
		background: #000000;
		height: 100vh;
		width: 100vw;
		color: white;
		padding: 10px 15px;
		font-family: "circular-light", "sans-serif";
	}

	@media (width <= 1000px) {
		body {
			grid-template-columns: 30% 70%;
			grid-template-rows: 92% 8%;
		}
	}

	@media (width >= 1000px) {
		body {
			grid-template-columns: 25% 75%;
			grid-template-rows: 92% 8%;
		}
	}

	nav {
		display: grid;
		grid-template-rows: 13% 87%;
	}

	.buttonCard {
		opacity: 0;
		bottom: 95px;
		visibility: hidden;
		transition:
			opacity 0.4s ease,
			bottom 0.4s ease,
			visibility 0s linear 0.4s;
	}

	.card:hover .buttonCard {
		opacity: 1;
		bottom: 100px;
		visibility: visible;
		transition:
			opacity 0.4s ease,
			bottom 0.4s ease,
			visibility 0s linear;
	}

	.card-song:hover .buttonPlaySong {
		display: flex;
	}
</style>

